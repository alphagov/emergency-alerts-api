version: 0.2

phases:
  pre_build:
    commands:
      - echo Checking out to migrations_${ENVIRONMENT}_latest tag...
      - git checkout tags/migrations_${ENVIRONMENT}_latest

  build:
    commands:
      - COMMIT_ID=$(echo $COMMIT_ID | cut -c 1-7)
      - echo Deployment started on `date`

      - |
        api_network_config=$(aws ecs describe-services --services ${RESOURCE_PREFIX:-eas-app}-api --cluster ${RESOURCE_PREFIX:-eas-app}-cluster | jq .services[0].networkConfiguration.awsvpcConfiguration)

        subnets=$(echo $api_network_config | jq .subnets)
        security_groups=$(echo $api_network_config | jq .securityGroups)

        taskdef_arn=$(aws ecs list-task-definitions --family-prefix ${RESOURCE_PREFIX:-eas-app}-migrations --status active --max-items 1 --sort DESC | jq .taskDefinitionArns[0] | tr -d '"')

      - |
        echo "Subnets: $subnets"
        echo "Security Groups: $security_groups"

      - |
        echo '
        aws ecs run-task \
          --task-definition $taskdef_arn \
          --cluster ${RESOURCE_PREFIX:-eas-app}-cluster \
          --launch-type="FARGATE" \
          --enable-execute-command \
          --network-configuration "{ \"awsvpcConfiguration\": { \"securityGroups\": $security_groups, \"subnets\": $subnets}}"
        '

      - sleep 10


  post_build:
    commands:
      - export MIGRATION_VERSION=$(cat migrations/.current-alembic-head)
      - echo "Checking for successful builds of $MIGRATION_VERSION"

      - chmod +x ./scripts/get-latest-migrations.sh
      - SUCCESSFUL_MIGRATIONS=$(./scripts/get-latest-migrations.sh MigrationSuccess 1699194880 1699367680 ${RESOURCE_PREFIX})
      - echo $SUCCESSFUL_MIGRATIONS
      - |
        if [[ $SUCCESSFUL_MIGRATIONS == 0 ]]; then
          echo "None"
        elif [[ $SUCCESSFUL_MIGRATIONS -gt 5 ]]; then
          echo "Greater than 5"
        elif [[ $SUCCESSFUL_MIGRATIONS -lt 5 ]]; then
          echo "Less than 5"
        fi
